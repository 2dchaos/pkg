
use uo;
use os;

include ":containers:storageAreas";
include ":containers:containers";
include ":gumps:include/requestgump";
include ":gumps:gumps";
include ":gumps:yesno";
include "include/say";
include ":keys:key";
include ":tn:tngumps";
include	":merchants:crafthelp";
include ":charactercreation:habilidades";

//Gump Constants
const BKGND_STONESLAB		:= 9200;  // Gray stone slab background
const BKGND_BLUESLAB		:= 3600;  // Raised edge (blocky)
const GF_STDCOLOR		:= 1890;

const MOEDAS			:= 47715;

var item_cfg := ReadConfigFile(":*:itemdesc");

const MOEDAS_COBRE		:= 0xba63; //id das moedas de cobre
const MOEDAS_PRATA		:= 0xba64; //id das moedas de prata
const MOEDAS_OURO		:= 0xba65; //id das moedas de ouro
const GOLD_COIN			:= 0xeed;  //id das moedas de ouro (outro tipo vÃ¡lido)

program MerchantMenu(params)

	var npc := params[1];
	var player := params[2];
//	var npc := player;

	if (player.hidden)
		player.hidden := 0;
		SendSysMessageEx (player, "Voce se revelou ao mercador.", SSM_FAIL);
	endif

	var gump := GFCreateGump(0, 0);
	GFPage(gump, 0);
	GFResizePic(gump, 0, 0, BKGND_BLUESLAB, 640, 480);
	GFResizePic(gump, 15, 15, BKGND_STONESLAB, 150, 450);

	var quartos := GetObjProperty(npc, "quartos");
	var taxa;
	var valortaxa;

	if (getObjProperty(npc, "taxap"))
		taxa := (getObjProperty(npc, "taxap"));
	endif

	var souInquilino := 0;
	var meuquarto := -1;
	var j := 1;
	foreach quarto in quartos
		if (quarto.inquilino == player.serial)
			souInquilino := 1;
			meuquarto := j;
			break;
		endif
		j := j + 1;
	endforeach

	GFAddButton(gump, 20, 33, 2117, 2118, GF_CLOSE_BTN,  200);
	GFTextLine(gump, 40, 30, GF_STDCOLOR, "Listar Quartos");


	if (souInquilino)
		GFAddButton(gump, 20, 83, 2117, 2118, GF_CLOSE_BTN, 100);
		GFTextLine(gump, 40, 80, GF_STDCOLOR, "Trocar Fechadura");

		GFAddButton(gump, 20, 133, 2117, 2118, GF_CLOSE_BTN, 400);
		GFTextLine(gump, 40, 130, GF_STDCOLOR, "Entregar Quarto");

	endif

	if (player.cmdlevel > 1)
		GFAddButton(gump, 20, 183, 2117, 2118, GF_CLOSE_BTN,  300);
		GFTextLine(gump, 40, 180, GF_STDCOLOR, "Adicionar Quarto");

		GFAddButton(gump, 20, 233, 2117, 2118, GF_CLOSE_BTN,  500);
		GFTextLine(gump, 40, 230, GF_STDCOLOR, "Cobrar Aluguel");

		GFAddButton(gump, 20, 283, 2117, 2118, GF_CLOSE_BTN,  600);
		GFTextLine(gump, 40, 280, GF_STDCOLOR, "Mural de Recados");

		if (!(npc.serial in getglobalproperty("InnKeeper")))
			GFAddButton(gump, 20, 333, 2117, 2118, GF_CLOSE_BTN,  700);
			GFTextLine(gump, 40, 330, GF_STDCOLOR, "Cobrar Automatico");
		endif
	endif

	if (GetObjProperty(npc, "confiscados").Exists(""+player.serial))
		GFAddButton(gump, 20, 383, 2117, 2118, GF_CLOSE_BTN,  800);
		GFTextLine(gump, 40, 380, GF_STDCOLOR, "Objetos Confiscados");
	endif

	var y_pos := 45;
	var i := 1;
	foreach quarto in quartos
		var dono := SystemFindObjectBySerial(quarto.inquilino, SYSFIND_SEARCH_OFFLINE_MOBILES);
		if (dono == error) //checa por via das duvidas pra ver se deletaram
			quarto.inquilino := 0;
			SetObjProperty(npc, "quartos", quartos);
		endif
		if (quarto.inquilino == error || quarto.inquilino == 0 || player.cmdlevel >=3)
			GFAddButton(gump, 175, y_pos+3, 2117, 2118, 1, i);
		endif
		var color := 666;
		if (quarto.inquilino == error || quarto.inquilino == 0) //se for desocupado fica cor 195, alugado fica cor 2449
			color := GF_STDCOLOR;
		endif
		if (player.cmdlevel >= 3) //se for gm mostra quem alugou, caso esteja alugado.
			if (quarto.inquilino == error || quarto.inquilino == 0)
				GFTextLine(gump, 195, y_pos,  color,  "" + quarto.name + " [" + quarto.custo + " moedas]");
			else
				dono := SystemFindObjectBySerial(quarto.inquilino, SYSFIND_SEARCH_OFFLINE_MOBILES);
				var dononame := dono.name;
				if (dononame == "Desconhecido")
					dononame := GetObjProperty(dono, "realname");
				endif
				GFTextLine(gump, 195, y_pos, color,  "" + quarto.name + " [" + quarto.custo + " moedas] ["  + dononame + "]" );
			endif
		else
			GFTextLine(gump, 195, y_pos, color,  "" + quarto.name + " [" + quarto.custo + " moedas]");
		endif
		y_pos := y_pos + 15;
		i := i + 1;
	endforeach

	var input := GFSendGump(player, gump);

	if (input[0] == 300) //adicionar quarto
		SendSysMessageEx(player, "Escolha a PORTA do quarto.", SSM_REQUEST);
		var porta := Target(player);

		if (!porta.isDoor())
			SendSysMessageEx(player, "Alvo invalido.", SSM_FAIL);
		else
			SetObjProperty(porta, "estalagem", 1);
			var room := struct;
			room.+door := porta.serial;
			SendSysMessageEx(player, "Selecione o centro com mais visibilidade dentro do quarto.");
			var cent := TargetCoordinates(player);
			room.+centro := { cent.x, cent.y, cent.z };
			if ( YesNo(player, "Existe um centro em Z diferente?") )
				SendSysMessageEx(player, "Selecione o centro com mais visibilidade dentro do novo Z.",SSM_INFO);
				var cent2 := TargetCoordinates(player);
				room.+centro := { cent.x, cent.y, cent.z, cent2.x, cent2.y, cent2.z };
			endif
			room.+custo := cint(RequestGump(player, "Quanto vai ser cobrado em moedas de cobre?", 0, 1));
			room.+name := cstr(RequestGump(player, "Qual o nome do quarto?"));
			SendSysMessage(player, "O quarto foi cadastrado.");
			var quartos := GetObjProperty(npc, "quartos");
			if (quartos == error)
				quartos := array;
			endif
			quartos.append(room);
			SetObjProperty(npc, "quartos", quartos);
		endif
	elseif (input[0] == 100 ) //trocar fechadura
		var yes := yesno(player, "O chaveiro vai cobrar 100 moedas, deseja continuar? " );
		if (yes)
			var bank_region := GetObjProperty(npc, "City");
			if ( !bank_region )
				bank_region := CP_DEFAULT_AREA;
			endif
			if ( !debitoEmConta(bank_region, player, 100) )
				SendSysMEssageEx(player, "Voce precisa de 100 moedas no banco.", SSM_FAIL);
			else
				var lockid := AllocLockId();
				var key := CreateItemInBackpack( player, "ironkey", 1 );
				var door := SystemFindObjectBySerial(quartos[meuquarto].door);
				SetObjProperty(door, "LockId", lockid);
				door.locked := 1;
				SetObjProperty( key, "LockId", lockid );
			endif
		endif
	elseif (input[0] == 400)//entregar quarto

		var yes := yesno(player, "Deseja devolver o quarto?  Seus itens serao deletados." );
		var quarto := quartos[meuquarto];
		if (yes)
			var cent := quarto.centro;
			if (cent[1])
				DestroyRentItens(cent[1], cent[2], cent[3], npc.realm);
				if (cent[4])
					DestroyRentItens(cent[4], cent[5], cent[6], npc.realm);
				endif
			endif
			var door := SystemFindObjectBySerial(quarto.door);
			Eraseobjproperty(door, "LockId");
			quartos[meuquarto].inquilino := 0;
			SetObjProperty(npc, "quartos", quartos);

		endif


	elseif (input[0] == 500) // cobrar aluguel

		var i := 1;
		foreach quarto in quartos
			var bank_region := GetObjProperty(npc, "City");
			if ( !bank_region )
				bank_region := CP_DEFAULT_AREA;
			endif
			var player2 := SystemFindObjectBySerial(quartos[i].inquilino, SYSFIND_SEARCH_OFFLINE_MOBILES);

			if ( !debitoEmConta(bank_region, player2, quartos[i].custo) )
				//var quarto := quartos[meuquarto];
				//foreach cont in (quarto.containers)
				//	foreach item in (enumerateitemsincontainer(cont))
				//		DestroyItem(item);
				//	endforeach
				//endforeach
				var door := SystemFindObjectBySerial(quarto.door);
				Eraseobjproperty(door, "LockId");
				quartos[i].inquilino := 0;
				SetObjProperty(npc, "quartos", quartos);
				SendSysMessageEx(player, "Player " + player2.name + " do quarto " + quarto.name + " nao teve dinheiro para pagar o aluguel.", SSM_FAIL);
			else
				SendSysMessageEx(player, "Player " + player2.name + " do quarto " + quarto.name + " pagou o aluguel.", SSM_INFO);
				if(getObjProperty(npc, "taxap"))
				valortaxa := ((quartos[i].custo * taxa) / 100);
					else
				valortaxa := (quartos[i].custo * 0.1);
				endif

				if (GetObjProperty(npc, "cofreid"))
					var cofser := getObjProperty(npc, "cofreid");
					var cofrereal := SystemFindObjectBySerial(cofser);
					CreateItemInContainer( cofrereal, "moedacobre", valortaxa );
				endif
			endif
			i := i +1;
		endforeach

	elseif (input[0] == 600) //linkar mural
		SendSysMessageEx(player, "Escolha o Mural que o NPC anunciara a cobranca de alugueis.");
		var mural := Target(player, TGTOPT_NOCHECK_LOS+TGTOPT_NEUTRAL);
		if (mural.objtype != 0x1E5E && mural.objtype != 0x1E5F)
			SendSysMessageEx(player, "Isto nao e um BulletinBoard =[.", SSM_FAIL);
		else
			SetObjProperty(npc, "mural", mural.serial);
			SendSysMessageEx(player, "O Mural foi linkado ao NPC.", SSM_INFO);
		endif
	elseif (input[0] == 700) //adicionar na global
		var innkeepers := getglobalproperty("InnKeeper");
		if (innkeepers == error)
			innkeepers := array;
		endif
		if (npc.serial in innkeepers)
			SendSysMessageEx(player, "NPC ja existe.", SSM_FAIL);
		else
			innkeepers.Append(npc.serial);
			setglobalproperty("InnKeeper",innkeepers);
			SendSysMessageEx(player, "NPC adicionado.", SSM_INFO);
		endif
	elseif (input[0] == 800) //objetos confiscados
		var bank_region := GetObjProperty(npc, "City");
		if ( !bank_region )
			bank_region := CP_DEFAULT_AREA;
		endif
		if ( !debitoEmConta(bank_region, player, 150) )
			SendSysMessageEx(player, "Voce precisa de 150 moedas no banco para pegar os itens confiscados.", SSM_FAIL);
		else //cria a chave
			var confiscados := GetObjProperty(npc, "confiscados");
			var mypack := confiscados["" + player.serial];
			mypack := SystemFindObjectBySerial(mypack);
			confiscados.Erase(""+player.serial);
			SetObjProperty(npc, "confiscados", confiscados);
			if (mypack != error)
				MoveItemToContainer( mypack, player.backpack);
				SendSysMessageEx(player, "Voce recebe seus objetos de volta.",SSM_INFO);
			else
				SendSysMessageEx(player, "Algo deu errado, voce nao recebe seus objetos de volta.",SSM_FAIL);
			endif
		endif

	elseif (input[0] < 100 && input[0] >= 1) //alugar quarto

		if (souInquilino)
			SendSysMEssageEx(player, "Voce ja tem um quarto.");
			return 1;
		endif

		if (player.cmdlevel >=3) //opcao de gm de remover quarto
			var gmmenu :=  RadioGump(player, 250, 325, "Escolha uma opcao", array{"Mudar Nome","Mudar Preco","Remover Quarto", "Mudar Centro", "Informacoes"});

			if (gmmenu == "Remover Quarto")
				quartos.erase(input[0]);
				setobjproperty(npc, "quartos", quartos);
				SendSysMessageEx(player, "Quarto removido, caso ja tenha sido alugado apague a prop da porta e remova os itens nos baus.", SSM_INFO);
				return 1;
			elseif (gmmenu == "Mudar Nome")
				quartos[input[0]].name := cstr(RequestGump(player, "Qual o nome do quarto?"));
				setobjproperty(npc, "quartos", quartos);
				SendSysMessageEx(player, "Nome Alterado para: " +quartos[input[0]].name ,SSM_INFO);
				return 1;
			elseif (gmmenu == "Mudar Preco")
				quartos[input[0]].custo := cint(RequestGump(player, "Quanto vai ser cobrado em moedas de cobre?", 0, 1));
				setobjproperty(npc, "quartos", quartos);
				SendSysMessageEx(player, "Preco Alterado para" +quartos[input[0]].custo,SSM_INFO);
				return 1;
			elseif (gmmenu == "Informacoes")
				var inq := SystemFindObjectBySerial(quartos[input[0]].inquilino, SYSFIND_SEARCH_OFFLINE_MOBILES);
				SendSysMessageEx(player, " Inquilino "+ inq.name + " Conta: " + inq.acctname);
			elseif (gmmenu == "Mudar Centro")
				SendSysMessageEx(player, "Selecione o centro com mais visibilidade dentro do quarto.",SSM_INFO);
				var cent := TargetCoordinates(player);
				quartos[input[0]].centro := { cent.x, cent.y, cent.z };
				if ( YesNo(player, "Existe um centro em Z diferente?") )
					SendSysMessageEx(player, "Selecione o centro com mais visibilidade dentro do novo Z.",SSM_INFO);
					var cent2 := TargetCoordinates(player);
					quartos[input[0]].centro := { cent.x, cent.y, cent.z, cent2.x, cent2.y, cent2.z };
				endif

				setobjproperty(npc, "quartos", quartos);
				SendSysMessageEx(player, "Centro Alterado.",SSM_INFO);
				return 1;
			endif
		endif

		var yes := yesNo(player, "Voce deseja alugar esse quarto por " +  quartos[input[0]].custo +" moedas");
		if (yes)

			var bank_region := GetObjProperty(npc, "City");
			if ( !bank_region )
				bank_region := CP_DEFAULT_AREA;
			endif
			if ( !debitoEmConta(bank_region, player, quartos[input[0]].custo) )
				SendSysMessageEx(player, "Voce nao tem moedas suficiente para pagar o aluguel.", SSM_FAIL);
			else //cria a chave
				quartos[input[0]].inquilino := player.serial;
				quartos[input[0]].data := polcore().systime;
				SetObjProperty(npc, "quartos", quartos); //seta prop
				var lockid := AllocLockId();
				var key := CreateItemInBackpack( player, "ironkey", 1 );
				SetObjProperty(quartos[input[0]].door, "LockId", lockid);
				var porta := SystemFindObjectBySerial(quartos[input[0]]);
				porta.locked := 1;
				SetObjProperty( key, "LockId", lockid );
			endif
		endif

	endif


endprogram



function debitoEmConta(banco, player, amount)

	var bank_box := CP_GetStorageContainerForMobile(player,  banco, CP_NOCREATE); //Acha o banco do player

	if (!bank_box) //quando nÃ£o tem banco
		SendSysMEssage(player, "Voce nao tem banco");
		Set_Critical(0);
		return 0;
	elseif (CalculaRecursosContainer(bank_box, MOEDAS_COBRE) < amount) // Quando grana no banco Ã© insuficiente
		SendSysMEssageEx(player, "Faltou grana no Banco pro aluguel.");
		Set_Critical(0);
		return 0;
	else //Quando tem grana suficiente no banco
		var cost_type := MOEDAS_COBRE;
		var cost_desc := GetName(cost_type);
		var cost_amt := amount;

		var info := array{};

		if (cost_type == MOEDAS_PRATA)
			cost_amt := cost_amt*10;
		elseif (cost_type == MOEDAS_OURO || cost_type == GOLD_COIN)
			cost_amt := cost_amt*100;
		endif

		if (TemHabilidade(player,"Negociador Eximio"))
			cost_amt := CInt(cost_amt*0.7);
			SendSysMessage(player, "O custo final vai ser de " + cost_amt);
		endif

		var totalPago := 0;
		var faltaPagar := cost_amt;
		//print("Falta Pagar: "+ faltaPagar +" ");

		Set_Critical(1);
		var recursosDisponiveis := CalculaRecursosContainer(player, cost_type);
		if (cost_type == MOEDAS_COBRE || cost_type == MOEDAS_PRATA || cost_type == MOEDAS_OURO || cost_type == GOLD_COIN)
			SendSysMessage(player, "Recurso inicial no banco: " + recursosDisponiveis[5] + " moedas de cobre.");
		else
			SendSysMessage(player, "Recurso inicial no banco: " + recursosDisponiveis[5] + " " + GetName(cost_type) + ".");
		endif

		var dicionarioAtual := Dictionary;
		var recursos := recursosDisponiveis[5];
		//print("recursos: "+ recursos +" ");
		var diferenca;
		var moeda;
		var item;

		if (recursos >= faltaPagar)
			if (cost_type == MOEDAS_COBRE || cost_type == MOEDAS_PRATA || cost_type == MOEDAS_OURO || cost_type == GOLD_COIN)
				if (faltaPagar > 0) //Tenta pagar com os cobres
					dicionarioAtual := recursosDisponiveis[1];
					foreach serial in dicionarioAtual //Verifica se da pra pagar sÃ³ com moedas de cobre
						moeda := SystemFindObjectBySerial(_serial_iter);
						diferenca := faltaPagar - moeda.amount;
						if (diferenca > 0)
							totalPago += moeda.amount;
							faltaPagar -= moeda.amount;
							DestroyItem(moeda);
						else
							totalPago += faltaPagar;
							SubtractAmount(moeda, faltaPagar);
							faltaPagar := 0;
							SendSysMEssageEx(player, "Voce pagou seu aluguel em dia.");
							break;
						endif
					endforeach
				endif
				if (faltaPagar > 0) //Tenta pagar com as pratas
					dicionarioAtual := recursosDisponiveis[2];
					foreach serial in dicionarioAtual //Verifica se da pra pagar sÃ³ com moedas de cobre
						moeda := SystemFindObjectBySerial(_serial_iter);
						diferenca := faltaPagar - moeda.amount*10;
						if (diferenca > 0)
							totalPago += moeda.amount*10;
							faltaPagar -= moeda.amount*10;
							DestroyItem(moeda);
						else
							var troco := moeda.amount*10 - faltaPagar;
							DestroyItem(moeda);
							totalPago += faltaPagar;
							DarTrocoBanco(player, bank_box, troco);

							faltaPagar := 0;
							SendSysMEssageEx(player, "Voce pagou seu aluguel em dia.");
							break;
						endif
					endforeach
				endif
				if (faltaPagar > 0) //Tenta pagar com os ouros
					dicionarioAtual := recursosDisponiveis[3];
					foreach serial in dicionarioAtual //Verifica se da pra pagar sÃ³ com moedas de cobre
						moeda := SystemFindObjectBySerial(_serial_iter);
						//print("Serial: "+ _serial_iter +" Quantidade: "+ serial);
						//print("Moeda: "+ moeda.amount +" ");
						//print("Falta Pagar: "+ faltaPagar +" ");
						diferenca := faltaPagar - moeda.amount*100;
						if (diferenca > 0)
							totalPago += moeda.amount*100;
							faltaPagar -= moeda.amount*100;
							DestroyItem(moeda);
						else
							//print("Vai pagar com ouro");
							var troco := moeda.amount*100 - faltaPagar;
							DestroyItem(moeda);
							totalPago += faltaPagar;
							DarTrocoBanco(player, bank_box, troco);
							faltaPagar := 0;
							SendSysMEssageEx(player, "Voce pagou seu aluguel em dia.");
							break;
						endif
					endforeach
				endif
			else
				dicionarioAtual := recursosDisponiveis[4];
				foreach serial in dicionarioAtual //Verifica se da pra pagar sÃ³ com moedas de cobre
					item := SystemFindObjectBySerial(_serial_iter);
					diferenca := faltaPagar - item.amount;
					if (diferenca > 0)
						totalPago += item.amount;
						faltaPagar -= item.amount;
						DestroyItem(item);
					else
						totalPago += faltaPagar;
						SubtractAmount(item, faltaPagar);
						faltaPagar := 0;
						SendSysMEssageEx(player, "Voce pagou seu aluguel em dia.");
						break;
					endif
				endforeach
			endif

			//Exibe quanto restou de recursos
			recursosDisponiveis := CalculaRecursosContainer(bank_box, cost_type);
			if (cost_type == MOEDAS_COBRE || cost_type == MOEDAS_PRATA || cost_type == MOEDAS_OURO || cost_type == GOLD_COIN)
				SendSysMessage(player, "Recurso final no banco: " + recursosDisponiveis[5] + " moedas de cobre.");
			else
				SendSysMessage(player, "Recurso final no banco: " + recursosDisponiveis[5] + " " + GetName(cost_type) + ".");
			endif
			return 1;
		else
			SendSysMessage(player, "Voce nao tem "+ GetName(cost_type, 1)+ " suficiente para pagar o aluguel.");
			Set_Critical(0);
			return 0;
		endif
		Set_Critical(0);
	endif
endfunction


function CheckGoldAmount(bank_box, amount)

	var prop := dictionary;
	prop["objtype"] := 47715;
	var total_gold := AmountInContainer(bank_box, prop );
	print(" " + total_gold + " " + amount);
	if ( amount == 0 )
		return 0;
	elseif ( amount > total_gold )
		return 0;
	else
		return 1;
	endif

endfunction

function DestroyRentItens(x, y, z, r)
	var objects := ListItemsNearLocation( x, y, z, 10, r);
	foreach obj in objects
		if (CheckLosBetween( x, y, z, obj.x, obj.y, obj.z, r))
			if (GetObjProperty(obj, "crafterserial"))
				DestroyItem(obj);
			elseif (KP_IsLockable(obj))
				var container := EnumerateItemsInContainer( obj, ENUMERATE_IGNORE_LOCKED );
				foreach item in container
					DestroyItem(item);
					sleepms(20);
				endforeach
			endif
		endif
		sleepms(20);
	endforeach
	return 1;
endfunction

function CalculaRecursosContainer(container, cost_type)
	var recursosDisponiveis := Dictionary;
	recursosDisponiveis[1] := Dictionary; //Cobre
	recursosDisponiveis[2] := Dictionary; //Prata
	recursosDisponiveis[3] := Dictionary; //Ouro
	recursosDisponiveis[4] := Dictionary; //Outros
	recursosDisponiveis[5] := 0; //Total

	if (cost_type == MOEDAS_COBRE || cost_type == MOEDAS_PRATA || cost_type == MOEDAS_OURO || cost_type == GOLD_COIN)
		foreach item in EnumerateItemsInContainer(container)
			if (item.objtype == MOEDAS_COBRE)
				recursosDisponiveis[1][item.serial] := item.amount;
				recursosDisponiveis[5] += item.amount;
			elseif (item.objtype == MOEDAS_PRATA)
				recursosDisponiveis[2][item.serial] := item.amount;
				recursosDisponiveis[5] += item.amount*10;
			elseif (item.objtype == MOEDAS_OURO || item.objtype == GOLD_COIN)
				recursosDisponiveis[3][item.serial] := item.amount;
				recursosDisponiveis[5] += item.amount*100;
			endif
			//print("Valor Disponivel : "+ recursosDisponiveis[5] +" ");
		endforeach
	else
		foreach item in EnumerateItemsInContainer(container)
			if (item.objtype == cost_type)
				recursosDisponiveis[4][item.serial] := item.amount;
				recursosDisponiveis[5] += item.amount;
				//print("Valor Disponivel : "+ recursosDisponiveis[5] +" ");
			endif
		endforeach
	endif
	return recursosDisponiveis;
endfunction

function DarTrocoBanco(player, bank_box , ValorTroco)
	var faltaPagar := ValorTroco;
	if(ValorTroco > 0)
		//SendSysMessage(player, "Recebeu:"); //Comentar quando for colocar em produÃ§Ã£o
	endif
	Set_Critical(1);
	var ouro := CInt(faltaPagar/100);
	if(ouro > 0)
		CreateItemInContainer(bank_box, MOEDAS_OURO, ouro);
		//SendSysMessage(player, ouro + " moedas de ouro");
	endif
	faltaPagar -= CInt(ouro*100);


	var prata := CInt(faltaPagar/10);
	if(prata > 0)
		CreateItemInBackpack(bank_box, MOEDAS_PRATA, prata);
		//SendSysMessage(player, prata + " moedas de prata");
	endif
	faltaPagar -= CInt(prata*10);


	var cobre := CInt(faltaPagar);
	if(cobre > 0)
		CreateItemInBackpack(bank_box, MOEDAS_COBRE, cobre);
		//SendSysMessage(player, cobre + " moedas de cobre");
	endif
	Set_Critical(0);
	return 1;
endfunction